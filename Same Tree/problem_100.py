# -*- coding: utf-8 -*-
"""Problem 100.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xpuuqHzh51WOypOifBiHxffvDTmR1_Sc
"""

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isSameTree(self, p: Optional[TreeNode], q: Optional[TreeNode]) -> bool:
        
        class TreeNode:
            def __init__(self, val=0, left=None, right=None):
                self.val = val
                self.left = left
                self.right = right
                
                
        def compare(a, b):   
            if a == None and b == None:
                return True

            if a != None and b != None:
                return ((a.val == b.val) and compare(a.left, b.left) and compare(a.right, b.right))
            
            return False
        
        if compare(p, q):
                return True